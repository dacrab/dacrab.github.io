---
const navItems = [
  { label: 'üè† Home', href: '#home' },
  { label: 'üëã About', href: '#about' },
  { label: 'üéØ Projects', href: '#projects' },
  { label: 'üí¨ Contact', href: '#contact' },
];
---

<nav class="swiss-nav" id="navigation">
  <div class="swiss-container">
    <div class="swiss-nav-content">
      <a href="#home" class="swiss-nav-logo">Vaggelis ü¶Ä</a>

      <ul class="swiss-nav-links">
        {navItems.map(item => (
          <li>
            <a href={item.href} class="swiss-nav-link" data-nav-link>
              {item.label}
            </a>
          </li>
        ))}
      </ul>

      <div class="nav-actions">
        <button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme" aria-pressed="false" title="Toggle theme" data-mode="system">üåì</button>
        <button class="swiss-nav-mobile-toggle" id="mobile-toggle" aria-label="Toggle navigation">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        </button>
      </div>
    </div>

    <div class="swiss-nav-mobile" id="mobile-nav">
      <ul class="swiss-nav-mobile-links">
        {navItems.map(item => (
          <li>
            <a href={item.href} class="swiss-nav-mobile-link" data-nav-link>
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const nav = document.getElementById('navigation');
    const mobileToggle = document.getElementById('mobile-toggle');
    const mobileNav = document.getElementById('mobile-nav');
    const navLinks = document.querySelectorAll('[data-nav-link]');
    const themeToggle = document.getElementById('theme-toggle');
    
    let scrolled = false;
    let ticking = false;

    // Nav background on scroll
    function updateNavBackground() {
      const shouldBeScrolled = window.scrollY > 20;
      if (shouldBeScrolled !== scrolled) {
        scrolled = shouldBeScrolled;
        nav?.classList.toggle('scrolled', scrolled);
      }
    }

    // Mobile menu toggle
    function toggleMobileMenu() {
      const isActive = mobileToggle?.classList.contains('active');
      mobileToggle?.classList.toggle('active');
      mobileNav?.classList.toggle('active');
      document.body.style.overflow = isActive ? '' : 'hidden';
    }

    // Close mobile menu
    function closeMobileMenu() {
      mobileToggle?.classList.remove('active');
      mobileNav?.classList.remove('active');
      document.body.style.overflow = '';
    }

    // Update active link
    function updateActiveLink() {
      const sections = ['#home', '#about', '#projects', '#contact'];
      let current = '#home';

      for (const section of sections) {
        const element = document.querySelector(section);
        if (element && element.getBoundingClientRect().top <= 100) {
          current = section;
        }
      }

      navLinks.forEach(link => {
        const isActive = link.getAttribute('href') === current;
        link.classList.toggle('active', isActive);
        if (isActive) link.setAttribute('aria-current', 'page');
        else link.removeAttribute('aria-current');
      });
    }

    // Throttled scroll handler
    function onScroll() {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateNavBackground();
          updateActiveLink();
          ticking = false;
        });
        ticking = true;
      }
    }

    // Event listeners
    mobileToggle?.addEventListener('click', toggleMobileMenu);

    // Theme toggle with localStorage persistence and system fallback
    function applyTheme(theme: 'light' | 'dark' | 'system' | null) {
      const root = document.documentElement;
      if (theme === 'dark' || theme === 'light') {
        root.setAttribute('data-theme', theme);
      } else {
        root.removeAttribute('data-theme');
      }
    }

    function getInitialTheme() /** @returns {'light'|'dark'|'system'} */ {
      const stored = localStorage.getItem('theme');
      if (stored === 'light' || stored === 'dark') return stored;
      return 'system';
    }

    let currentTheme: 'light' | 'dark' | 'system' = getInitialTheme();
    applyTheme(currentTheme === 'system' ? null : (currentTheme as 'light' | 'dark'));
    if (themeToggle) {
      themeToggle.setAttribute('data-mode', currentTheme);
      themeToggle.setAttribute('aria-pressed', String(currentTheme !== 'system'));
      themeToggle.title = `Theme: ${currentTheme}`;
    }

    themeToggle?.addEventListener('click', () => {
      // cycle: system -> dark -> light -> system
      if (currentTheme === 'system') currentTheme = 'dark';
      else if (currentTheme === 'dark') currentTheme = 'light';
      else currentTheme = 'system';
      localStorage.setItem('theme', currentTheme);
      applyTheme(currentTheme === 'system' ? null : (currentTheme as 'light' | 'dark'));
      themeToggle.setAttribute('data-mode', currentTheme);
      themeToggle.setAttribute('aria-pressed', String(currentTheme !== 'system'));
      themeToggle.title = `Theme: ${currentTheme}`;
    });

    navLinks.forEach(link => {
      link.addEventListener('click', e => {
        e.preventDefault();
        const href = link.getAttribute('href');
        const target = href ? document.querySelector(href) : null;

        if (target) {
          closeMobileMenu();
          target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          setTimeout(() => updateActiveLink(), 100);
        }
      });
    });

    window.addEventListener('scroll', onScroll, { passive: true });
    
    // Initialize
    updateNavBackground();
    updateActiveLink();
  });
</script>
