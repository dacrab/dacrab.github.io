---
// Hero section with Swiss design principles
---

<section id="home" class="swiss-hero">
  <div class="swiss-container">
    <div class="swiss-hero-content">
      <!-- Swiss geometric decorations -->
      <div class="swiss-decoration swiss-decoration-line hero-line-1"></div>
      <div class="swiss-decoration swiss-decoration-square hero-square-1"></div>
      <div class="swiss-decoration swiss-decoration-circle hero-circle-1"></div>
      
      <!-- Main content -->
      <div class="swiss-hero-text">
        <div class="swiss-hero-label">
          <span class="swiss-caption">Portfolio 2025</span>
        </div>
        
        <h1 class="swiss-heading-1 swiss-hero-title">
          <span class="hero-title-line">DaCrab</span>
          <span class="hero-title-line hero-title-secondary">Web Developer</span>
        </h1>
        
        <p class="swiss-body-large swiss-hero-description">
          Creating digital experiences with Swiss design principlesâ€”
          <strong>clean, functional, and purposeful</strong> solutions 
          that prioritize clarity and user experience.
        </p>
        
        <div class="swiss-hero-actions">
          <a href="#projects" class="swiss-button swiss-button-primary">
            View Projects
          </a>
          <div class="cv-dropdown-wrapper">
            <button class="swiss-button swiss-button-outline cv-dropdown-trigger" id="cv-dropdown">
              Download CV
              <span class="dropdown-arrow">â–¼</span>
            </button>
            <div class="cv-dropdown-menu" id="cv-dropdown-menu">
              <a href="/cv/CV_Vaggelis_Kavouras_English.pdf" download class="cv-dropdown-item">
                <span class="cv-flag">ðŸ‡¬ðŸ‡§</span>
                English CV
              </a>
              <a href="/cv/CV_Vaggelis_Kavouras_Greek.pdf" download class="cv-dropdown-item">
                <span class="cv-flag">ðŸ‡¬ðŸ‡·</span>
                Greek CV
              </a>
            </div>
          </div>
          <a href="#contact" class="swiss-button swiss-button-outline">
            Get in Touch
          </a>
        </div>
      </div>
      
      <!-- Swiss grid visualization -->
      <div class="swiss-hero-visual">
        <div class="swiss-grid-visual">
          <div class="grid-square"></div>
          <div class="grid-square"></div>
          <div class="grid-square active"></div>
          <div class="grid-square"></div>
          <div class="grid-square"></div>
          <div class="grid-square"></div>
          <div class="grid-square active"></div>
          <div class="grid-square"></div>
          <div class="grid-square"></div>
        </div>
      </div>
    </div>
    
    <!-- Scroll indicator -->
    <div class="swiss-scroll-indicator">
      <div class="scroll-line"></div>
      <span class="swiss-caption">Scroll</span>
    </div>
  </div>
</section>



<script>
  // Add entrance animations
  document.addEventListener('DOMContentLoaded', () => {
    const heroElements = document.querySelectorAll('.swiss-hero-text > *');
    const gridSquares = document.querySelectorAll('.grid-square');
    
    // Animate hero text elements
    heroElements.forEach((element, index) => {
      const el = element as HTMLElement;
      el.style.opacity = '0';
      el.style.transform = 'translateY(30px)';
      el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
      
      setTimeout(() => {
        el.style.opacity = '1';
        el.style.transform = 'translateY(0)';
      }, index * 200 + 500);
    });
    
    // Animate grid squares
    gridSquares.forEach((square, index) => {
      const el = square as HTMLElement;
      el.style.opacity = '0';
      el.style.transform = 'scale(0.8)';
      el.style.transition = 'opacity 0.4s ease, transform 0.4s ease';
      
      setTimeout(() => {
        el.style.opacity = '1';
        el.style.transform = 'scale(1)';
      }, index * 100 + 1000);
    });
    
    // Random grid square activation
    setInterval(() => {
      gridSquares.forEach(square => square.classList.remove('active'));
      const randomIndex = Math.floor(Math.random() * gridSquares.length);
      gridSquares[randomIndex]?.classList.add('active');
    }, 3000);
    
    // CV Dropdown functionality
    const cvDropdownTrigger = document.getElementById('cv-dropdown');
    const cvDropdownMenu = document.getElementById('cv-dropdown-menu');
    
    if (cvDropdownTrigger && cvDropdownMenu) {
      cvDropdownTrigger.addEventListener('click', (e) => {
        e.preventDefault();
        cvDropdownMenu.classList.toggle('active');
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!cvDropdownTrigger.contains(e.target as Node) && !cvDropdownMenu.contains(e.target as Node)) {
          cvDropdownMenu.classList.remove('active');
        }
      });
    }
  });
</script>
