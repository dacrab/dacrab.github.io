name: Performance Monitor

on:
  schedule:
    # Run weekly performance check on Mondays at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  performance-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: performance-monitor-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci || npm install --no-audit --no-fund


      - name: Build and measure performance
        run: |
          echo "=== Build Performance Report ===" > performance-report.txt
          echo "Date: $(date)" >> performance-report.txt
          echo "Commit: ${{ github.sha }}" >> performance-report.txt
          echo "" >> performance-report.txt

          # Measure build time
          echo "Starting build measurement..." >> performance-report.txt
          start_time=$(date +%s%N)
          npm run build
          end_time=$(date +%s%N)
          build_time_ms=$(( (end_time - start_time) / 1000000 ))
          build_time_s=$(echo "scale=2; $build_time_ms / 1000" | bc -l)
          
          echo "Build time: ${build_time_s}s (${build_time_ms}ms)" >> performance-report.txt

          # Check bundle size
          if [ -d "dist" ]; then
            total_size=$(du -sh dist | cut -f1)
            total_size_bytes=$(du -sb dist | cut -f1)
            echo "Bundle size: $total_size ($total_size_bytes bytes)" >> performance-report.txt
            
            # Count files in dist
            file_count=$(find dist -type f | wc -l)
            echo "Files in bundle: $file_count" >> performance-report.txt
          fi

          # Check dependency count
          dep_count=$(npm ls --all --json 2>/dev/null | jq -r '.. | objects | select(has("version")) | .name' | wc -l || echo "N/A")
          echo "Dependencies: $dep_count packages" >> performance-report.txt

          # Check node_modules size
          if [ -d "node_modules" ]; then
            node_modules_size=$(du -sh node_modules | cut -f1)
            echo "Node modules size: $node_modules_size" >> performance-report.txt
          fi

          echo "" >> performance-report.txt
          echo "=== Performance Report ===" >> performance-report.txt
          cat performance-report.txt

      - name: Upload performance report artifact
        uses: actions/upload-artifact@v5
        with:
          name: performance-report
          path: performance-report.txt

      - name: Check performance thresholds
        id: performance-check
        run: |
          # Set performance thresholds (in seconds)
          BUILD_THRESHOLD=30
          SIZE_THRESHOLD_MB=10
          
          build_time=$(grep "Build time:" performance-report.txt | sed 's/Build time: \([0-9.]*\)s.*/\1/')
          bundle_size_mb=$(grep "Bundle size:" performance-report.txt | sed 's/.*(\([0-9]*\) bytes).*/\1/' | awk '{print int($1/1024/1024)}')
          
          echo "build-time=$build_time" >> $GITHUB_OUTPUT
          echo "bundle-size-mb=$bundle_size_mb" >> $GITHUB_OUTPUT
          
          # Check if thresholds are exceeded
          if (( $(echo "$build_time > $BUILD_THRESHOLD" | bc -l) )); then
            echo "build-slow=true" >> $GITHUB_OUTPUT
          else
            echo "build-slow=false" >> $GITHUB_OUTPUT
          fi
          
          if [ "$bundle_size_mb" -gt "$SIZE_THRESHOLD_MB" ]; then
            echo "bundle-large=true" >> $GITHUB_OUTPUT
          else
            echo "bundle-large=false" >> $GITHUB_OUTPUT
          fi

      - name: Create performance issue (if needed)
        if: steps.performance-check.outputs.build-slow == 'true' || steps.performance-check.outputs.bundle-large == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            
            // Read performance data
            const report = fs.readFileSync('performance-report.txt', 'utf8');
            const buildTime = '${{ steps.performance-check.outputs.build-time }}';
            const bundleSizeMb = '${{ steps.performance-check.outputs.bundle-size-mb }}';
            const buildSlow = '${{ steps.performance-check.outputs.build-slow }}' === 'true';
            const bundleLarge = '${{ steps.performance-check.outputs.bundle-large }}' === 'true';
            
            // Create issue title and body
            let title = 'Performance Alert - ';
            let body = '## Performance Report\n\n';
            body += '```\n' + report + '\n```\n\n';
            
            if (buildSlow) {
              title += 'Slow Build Time';
              body += '⚠️ **Build time exceeded threshold** (30s): ' + buildTime + 's\n\n';
            }
            
            if (bundleLarge) {
              if (buildSlow) title += ' & ';
              title += 'Large Bundle Size';
              body += '⚠️ **Bundle size exceeded threshold** (10MB): ' + bundleSizeMb + 'MB\n\n';
            }
            
            body += 'Please investigate the performance regression and consider optimizations.\n';
            body += '\n---\n';
            body += '*This issue was automatically created by the Performance Monitor workflow.*';
            
            // Create or update issue
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['performance', 'automated']
            });

      - name: Performance Summary
        run: |
          echo "## Performance Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build Time | ${{ steps.performance-check.outputs.build-time }}s | ${{ steps.performance-check.outputs.build-slow == 'true' && '⚠️ Slow' || '✅ Good' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Size | ${{ steps.performance-check.outputs.bundle-size-mb }}MB | ${{ steps.performance-check.outputs.bundle-large == 'true' && '⚠️ Large' || '✅ Good' }} |" >> $GITHUB_STEP_SUMMARY
